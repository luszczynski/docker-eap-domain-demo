embed-host-controller
if (outcome==failed) of /host=frontend/server-config=load-balancer:read-resource

    # Clean out default servers
    /host=master/server-config=server-one:remove
    /host=master/server-config=server-two:remove
    /host=master/server-config=server-three:remove
    /server-group=main-server-group:remove
    /server-group=other-server-group:remove

    # Clone the HA profile to a new profile called backend.
    /profile=ha:clone(to-profile=backend)

    # Clone the default profile to be used for load-balancer profile
    /profile=default:clone(to-profile=load-balancer)

    # Configure the modcluster subsystem in the backend profile to use an advertise security key set to "mypassword"
    /profile=backend/subsystem=modcluster/mod-cluster-config=configuration:write-attribute(name=advertise-security-key, value=mypassword)

    # Adding the mod-cluster filter to the undertow subsystem and configuring the advertise security key to "mypassword"
    /profile=load-balancer/subsystem=undertow/configuration=filter/mod-cluster=modcluster:add(management-socket-binding=http, advertise-socket-binding=modcluster, security-key=mypassword)

    # Suppress warnings about Cluster Topology because of a known issue see https://issues.jboss.org/jira/browse/JBEAP-794
    /profile=backend/subsystem=logging/logger=org.infinispan.topology.ClusterTopologyManagerImpl/:add(category=org.infinispan.topology.ClusterTopologyManagerImpl,level=ERROR)

    # Suppress warnings about environment configuration since we are running in a limited lab environment.
    /profile=backend/subsystem=logging/logger=org.jgroups.protocols.UDP/:add(category=org.jgroups.protocols.UDP,level=ERROR)

    # Add a server group called backend-servers
    /server-group=backend-servers:add(profile=backend, socket-binding-group=ha-sockets)

    # Add a modcluster filter to the undertow server that will use mulitcast to connect to backend servers
    /profile=load-balancer/subsystem=undertow/server=default-server/host=default-host/filter-ref=modcluster:add
    /socket-binding-group=standard-sockets/socket-binding=modcluster:add(multicast-port=23364, multicast-address=224.0.1.105)

    # Add the load-balancer server group
    /server-group=load-balancer:add(profile=load-balancer, socket-binding-group=standard-sockets)

    /profile=backend/subsystem=transactions:write-attribute(name=node-identifier,value="${jboss.tx.node.id}")
    /profile=load-balancer/subsystem=transactions:write-attribute(name=node-identifier,value="${jboss.tx.node.id}")

end-if
